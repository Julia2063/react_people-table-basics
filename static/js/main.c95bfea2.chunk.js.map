{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","persone","name","sex","slug","style","color","PeoplePage","useState","people","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","isSelected","loadPeople","loadedPeople","useEffect","length","map","born","died","fatherName","motherName","isMotherPersone","find","per","isFatherPersone","parentCell","someName","somePersone","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c95bfea2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to:string,\n  text: string,\n}\n\nconst PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\n\ninterface Props {\n  persone: Person | null,\n}\n\nconst PersonLink: React.FC<Props> = ({ persone }) => {\n  const { name, sex, slug } = persone as Person;\n\n  return (\n    <NavLink\n      to={`../${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n      style={sex === 'f' ? { color: 'red' } : {}}\n    >\n      {name}\n    </NavLink>\n  );\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug } = useParams();\n  const isSelected = (persone: Person) => persone.slug === slug;\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people?.length === 0 ? (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          ) : ((!isError && !isLoading) && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(persone => {\n                  const {\n                    name,\n                    sex,\n                    born,\n                    died,\n                    fatherName,\n                    motherName,\n                  } = persone;\n\n                  const isMotherPersone\n                  = people?.find(per => per.name === motherName) || null;\n\n                  const isFatherPersone\n                  = people?.find(per => per.name === fatherName) || null;\n\n                  const parentCell\n                  = (someName: string | null, somePersone: Person | null) => {\n                    return someName ? (\n                      <td>\n                        {somePersone\n                          ? <PersonLink persone={somePersone} />\n                          : someName}\n                      </td>\n                    ) : <td>-</td>;\n                  };\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={name}\n                      className={classNames(\n                        { 'has-background-warning': isSelected(persone) },\n                      )}\n                    >\n                      <td>\n                        <PersonLink persone={persone} />\n                      </td>\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      {parentCell(motherName, isMotherPersone)}\n                      {parentCell(fatherName, isFatherPersone)}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={(<PeoplePage />)} />\n            <Route path=\":slug\" element={(<PeoplePage />)} />\n          </Route>\n\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}